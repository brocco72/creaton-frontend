!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((n=n||self).HickoryRoot={})}(this,function(n){"use strict";function o(n,t){return n?0===n.indexOf(t)?n:t+n:""}function u(n){return n||""}function c(n){return n||""}function i(){}function t(){var r;return{confirmNavigation:function(n,t,e){r?r(n,t,e||i):t()},confirm:function(n){r=n||null}}}var e=t;n.locationUtils=function(n){void 0===n&&(n={});var t=n.query,e=void 0===t?{}:t,r=e.parse,d=void 0===r?u:r,i=e.stringify,a=void 0===i?c:i,v=n.base;return{location:function(n,t){var e=n.url,r=n.state;if(""===e||"#"===e.charAt(0)){t||(t={pathname:"/",hash:"",query:d()});var i={pathname:t.pathname,hash:"#"===e.charAt(0)?e.substring(1):t.hash,query:t.query};return r&&(i.state=r),i}var a,o=e.indexOf("#");-1!==o?(a=e.substring(o+1),e=e.substring(0,o)):a="";var u,c=e.indexOf("?");-1!==c&&(u=e.substring(c+1),e=e.substring(0,c));var s=d(u),f=v?v.remove(e):e;""===f&&(f="/");var h={hash:a,query:s,pathname:f};return r&&(h.state=r),h},keyed:function(n,t){return n.key=t,n},stringify:function(n){if("string"!=typeof n)return(void 0!==n.pathname?v?v.add(n.pathname):n.pathname:"")+o(a(n.query),"?")+o(n.hash,"#");var t=n.charAt(0);return"#"===t||"?"===t?n:v?v.add(n):n}}},n.keyGenerator=function(){var t=0;return{major:function(n){return n&&(t=n[0]+1),[t++,0]},minor:function(n){return[n[0],n[1]+1]}}},n.confirmation=t,n.navigationConfirmation=e,n.navigateWith=function(n){var a,t=n.responseHandler,i=n.utils,e=n.keygen,o=n.current,r=n.push,u=n.replace;function c(n,t,e,r){var i={location:n,action:t,finish:function(){a===i&&(e(),a=void 0)},cancel:function(n){a===i&&(r(n),i.cancelled=!0,a=void 0)},cancelled:!1};return i}function s(n){var t=i.keyed(n,e.minor(o().key));return c(t,"replace",u.finish(t),u.cancel)}function f(n){var t=i.keyed(n,e.major(o().key));return c(t,"push",r.finish(t),r.cancel)}return{prepare:function(n,t){var e=o(),r=i.location(n,e);switch(t){case"anchor":return i.stringify(r)===i.stringify(e)?s(r):f(r);case"push":return f(r);case"replace":return s(r);default:throw new Error("Invalid navigation type: "+t)}},emitNavigation:function(n){t(a=n)},createNavigation:c,cancelPending:function(n){a&&(a.cancel(n),a=void 0)}}},n.createBase=function(e,n){if("string"!=typeof e||"/"!==e.charAt(0)||"/"===e.charAt(e.length-1))throw new Error('The base segment "'+e+'" is not valid. The "base" option must begin with a forward slash and end with a non-forward slash character.');var t=n||{},r=t.emptyRoot,i=void 0!==r&&r,a=t.strict,o=void 0!==a&&a;return{add:function(n){if(i){if("/"===n)return e;if(n.startsWith("/?")||n.startsWith("/#"))return""+e+n.substr(1)}else if("?"===n.charAt(0)||"#"===n.charAt(0))return n;return""+e+n},remove:function(n){if(""===n)return"";var t;if(t=n,!new RegExp("^"+e+"(\\/|\\?|#|$)","i").test(t)){if(o)throw new Error('Expected a string that begins with "'+e+'", but received "'+n+'".');return n}if(n!==e)return n.substr(e.length);if(o&&!i)throw new Error('Received string "'+e+'", which is the same as the base, but "emptyRoot" is not true.');return"/"}}},Object.defineProperty(n,"__esModule",{value:!0})});
